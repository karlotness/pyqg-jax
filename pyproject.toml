[build-system]
requires = ["flit_core >=3.11,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pyqg-jax"
description = "Quasigeostrophic model in JAX (port of PyQG)"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
license-files = ["LICENSE.txt"]
authors = [
  {name = "Karl Otness"},
]
dependencies = [
  "jax>=0.4.6",
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Atmospheric Science",
  "Topic :: Scientific/Engineering :: Oceanography",
  "Topic :: Scientific/Engineering :: Physics",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/karlotness/pyqg-jax"
Documentation = "https://pyqg-jax.readthedocs.io"
"Source Code" = "https://github.com/karlotness/pyqg-jax"
"Bug Tracker" = "https://github.com/karlotness/pyqg-jax/issues"

[dependency-groups]
test = [
  "jax[cpu]>=0.4.11",
  "pyqg @ git+https://github.com/karlotness/pyqg.git@fb4a598bf32912550ea030e3d61fdec317dde45e",
  "pytest",
  "numpy",
]

[tool.flit.sdist]
include = ["tests/"]
exclude = ["**/*~"]

[tool.tox]
envlist = ["py3", "lint"]

[tool.tox.env_run_base]
description = "Run tests"
dependency_groups = ["test"]
commands = [["pytest", {replace = "posargs", extend = true}]]
setenv = {JAX_PLATFORMS = "cpu", JAX_ENABLE_X64 = "True"}

[tool.tox.env.lint]
description = "Check code for style and formatting"
skip_install = true
ignore_errors = true
dependency_groups = []
deps = [
  "ruff>=0.1.5",
  "black>=25.1.0,<26",
]
commands = [
  ["ruff", "check", "--", "src{/}pyqg_jax", "tests", "docs"],
  ["black", "--check", "--diff", "src{/}pyqg_jax", "tests", "docs"],
]
setenv = {}

[tool.tox.env.docs]
description = "Build documentation site"
dependency_groups = []
deps = ["-r docs{/}requirements.txt"]
commands = [["sphinx-build", "-W", "-b", "html", "{tox_root}{/}docs", "{tox_root}{/}docs{/}_build{/}html"]]
setenv = {PYDEVD_DISABLE_FILE_VALIDATION = "1"}

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts = [
  "--import-mode=importlib",
]

[tool.ruff]
extend-exclude = ["docs/_build/"]
src = ["src"]
line-length = 88
respect-gitignore = true
fix = false

[tool.ruff.lint]
select = ["E", "F", "W", "B", "RUF", "UP", "C4", "YTT", "T10", "T20", "ICN", "SIM", "NPY", "PT"]
ignore = ["E741", "E743", "UP015", "SIM108", "RUF022"]

[tool.ruff.lint.flake8-import-conventions]
[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"jax.numpy" = "jnp"

[tool.ruff.lint.flake8-pytest-style]
parametrize-names-type = "csv"
